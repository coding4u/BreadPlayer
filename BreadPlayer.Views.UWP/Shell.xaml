<Page
    x:Name="ShellView"
    x:Class="BreadPlayer.Shell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:BreadPlayer"
    xmlns:Behaviours="using:BreadPlayer.Behaviours"
    xmlns:Converters="using:BreadPlayer.Converters"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:controls="using:SplitViewMenu"
    xmlns:StateTriggers="using:BreadPlayer.StateTriggers"
    xmlns:blur="using:BreadPlayer.Effects" 
    xmlns:BPControls="using:BreadPlayer.Controls"
    mc:Ignorable="d" Loaded="Page_Loaded" DataContext="{StaticResource ShellVM}">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/HamburgerMenu.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="BPControls:ImageEx">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#444" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="BPControls:ImageEx">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Storyboard x:Name="ImageTransition">
                <DoubleAnimation Storyboard.TargetName="infoBar" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.8"></DoubleAnimation>
            </Storyboard>
            <DataTemplate x:Key="MobileEqualizerSliderTemplate">
                <StackPanel>
                    <Slider 
                                    Height="100" 
                                    Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"
                                    BorderBrush="{x:Null}" 
                                    Background="#FFC5C5C5"
                                    Style="{StaticResource CircleSlider}" 
                                    Minimum="-14"
        							Maximum="14"
        							LargeChange="0.2"
        							SmallChange="0.1"
                                    SnapsTo="Ticks"
                                    TickPlacement="None"
                                    IsEnabled="{Binding Path=IsActive}"
                                    TickFrequency="0.1"
                                    Margin="0,20,0,0" 
                                    Orientation="Vertical" Value="{Binding Path=Gain, Mode=TwoWay}"/>
                    <TextBlock Margin="0,10,0,0" FontFamily="Segoe UI" FontWeight="SemiBold" HorizontalAlignment="Center" Text="{Binding Path=BandCaption}" FontSize="9"/>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>       
    </Page.Resources>
    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="900" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="showMoreBtn.IsChecked" Value="False" />
                        <Setter Target="equalizerGrid.Height" Value="380"/>

                        <!--<Setter Target="ValueIndicatorText.FontSize" Value="11"/>-->
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="positionSlider.Visibility" Value="Collapsed" />
                        <Setter Target="showMoreBtn.IsChecked" Value="False" />
                        <Setter Target="infoBar.(Grid.ColumnSpan)" Value="4"/>
                        <Setter Target="positionProgressBar.Visibility" Value="Visible"/>
                        <Setter Target="equalizerGrid.Height" Value="380"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="positionTxt.Visibility" Value="Collapsed" />
                        <Setter Target="showMoreBtn.Visibility" Value="Visible" />
                        <Setter Target="infoBar.(Grid.ColumnSpan)" Value="4"/>
                        <Setter Target="infoBar.Margin" Value="0,3,0,0"/>
                        <Setter Target="playbarGrid.(Grid.ColumnDefinitions)[1].Width" Value="*"/>
                        
                        <Setter Target="positionSlider.Visibility" Value="Visible"/>
                        <Setter Target="positionSlider.(Grid.Row)" Value="0"/>
                        <Setter Target="positionSlider.(Grid.Column)" Value="0"/>
                        <Setter Target="positionSlider.(Grid.ColumnSpan)" Value="20"/>
                        <Setter Target="positionSlider.Margin" Value="0,-10,0,0"/>
                        <Setter Target="positionSlider.Background" Value="{ThemeResource ThemeForeground}"/>
                        <Setter Target="positionSlider.VerticalAlignment" Value="Top"/>

                        <Setter Target="AlbumArtGrid.Visibility" Value="Collapsed"/>
                        <Setter Target="tagsPanel.Margin" Value="10,0,0,0"/>
                        <Setter Target="NowPlayingFrame.Margin" Value="0"/>
                        <Setter Target="NowPlayingFrame.Width" Value="Auto"/>

                        <Setter Target="equalizerGrid.Padding" Value="20"/>
                        <Setter Target="equalizerGrid.Height" Value="320"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTriggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="EqualizerGrid.Visibility" Value="Visible"/>
                        <Setter Target="EqualizerGrid.Height" Value="220"/>
                        <Setter Target="BandStackPanel.Margin" Value="20,0,0,-10"/>
                        <Setter Target="BandStackPanel.HorizontalAlignment" Value="Stretch"/>
                        <Setter Target="ValueIndicatorGrid.Margin" Value="0,15,-10,75"/>
                        <Setter Target="ValueIndicatorGrid2.Margin" Value="-10,15,0,75"/>
                        <Setter Target="ValueIndicatorText.FontSize" Value="9"/>
                        <Setter Target="BandPanel.ItemTemplate" Value="{StaticResource MobileEqualizerSliderTemplate}"/>
                        <Setter Target="backgroundBlur.BlurAmount" Value="5"/>
                        <Setter Target="backgroundBorder.Opacity" Value="1"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding Path=IsPlaybarHidden, UpdateSourceTrigger=PropertyChanged}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NowPlayingGrid.Visibility" Value="Visible"/>
                        <Setter Target="NowPlayingFrame.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                    <VisualState.Storyboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:1" Storyboard.TargetName="NowPlayingGrid" Storyboard.TargetProperty="Opacity" From="0" To="1"/>
                        </Storyboard>
                    </VisualState.Storyboard>
                </VisualState>                
            </VisualStateGroup>            
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding Source={StaticResource Core}, Path=NotificationManager.Show}"/>
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="notification" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" SpeedRatio="2"></DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetName="notification" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" SpeedRatio="4" From="130" To="0" Duration="0:0:1"/>
                    </Storyboard>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding Source={StaticResource Core}, Path=NotificationManager.Show, Converter={StaticResource TrueToFalse}}"/>
                    </VisualState.StateTriggers>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="notification" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:1" SpeedRatio="2"></DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetName="notification" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" SpeedRatio="4" From="0" To="130" Duration="0:0:1"/>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding Path=IsEqualizerVisible}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="equalizerGrid.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="equalizerOverlayGrid" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:2" SpeedRatio="2"></DoubleAnimation>
                    </Storyboard>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding Path=IsEqualizerVisible, Converter={StaticResource TrueToFalse}}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="equalizerOverlayGrid.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="equalizerOverlayGrid" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:2" SpeedRatio="2"></DoubleAnimation>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding Source={StaticResource Core}, Path=SettingsVm.EnableBlur}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="backgroundBlur.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding Source={StaticResource Core}, Path=SettingsVm.EnableBlur, Converter={StaticResource TrueToFalse}}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="backgroundBlur.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <BPControls:ImageEx x:Name="MainBackgroundImage" Margin="0,0,0,70" Stretch="UniformToFill" Source="{Binding Source={StaticResource Core}, Path=Player.CurrentlyPlayingFile.AttachedPicture, Converter={StaticResource PathToImage}, ConverterParameter='null'}">
            <Image x:Name="backgroundImage" Opacity="0" Stretch="UniformToFill">
            </Image>
        </BPControls:ImageEx>
        <blur:BackDrop x:Name="backgroundBlur" BlurAmount="15"/>
        <Border x:Name="backgroundBorder" Opacity="0.8" Background="{ThemeResource PlaybarBrush}"/>

     
        <Grid x:Name="ShellGrid" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <CompositeTransform TranslateY="0"/>
            </Grid.RenderTransform>

            <controls:SplitViewMenu x:Name="hamburgerMenu" PlaylistsItems="{Binding Source={StaticResource Core}, Path=PlaylistsItems}" InitialPage="local:LibraryView" Margin="0,0,0,69.5">
                <controls:SplitViewMenu.TopNavigationItems>
                    <controls:SimpleNavMenuItem x:Uid="yourMusicMenuItem" x:Name="LibraryItem" DestinationPage="local:LibraryView" FontGlyph="&#x0041;" Label="" Arguments="MusicCollection" Symbol="Accept" Tooltip="">
                        <controls:SimpleNavMenuItem.Shortcuts>
                            <controls:Shortcut SymbolAsChar="&#xE71C;" ShortcutFlyout="{StaticResource GenreFlyout}" Tooltip="Filter"/>
                            <controls:Shortcut SymbolAsChar="&#xE174;" ShortcutFlyout="{StaticResource SortMenuFlyout}" Tooltip="Sort"/>
                        </controls:SimpleNavMenuItem.Shortcuts>
                    </controls:SimpleNavMenuItem>
                    <controls:SimpleNavMenuItem x:Uid="musicHistoryMenuItem" DestinationPage="local:MusicHistoryView" FontGlyph="&#x0042;" Label="Your Music History" Arguments="Recent" Tooltip="" Symbol="Accept"></controls:SimpleNavMenuItem>
                      <controls:SimpleNavMenuItem x:Uid="favoritesMenuItem" DestinationPage="local:LibraryView" FontGlyph="&#x0049;" Tooltip="" Label="" Symbol="Accept" Arguments="Favorites"></controls:SimpleNavMenuItem>
                    <controls:SimpleNavMenuItem x:Uid="nowBakingMenuItem" DestinationPage="local:LibraryView" Arguments="MusicCollection"  x:Name="NowPlayingItem" FontGlyph="&#x004b;" Tooltip="" Label="" Symbol="Accept" HeaderVisibility="Collapsed"></controls:SimpleNavMenuItem>
                </controls:SplitViewMenu.TopNavigationItems>
                <controls:SplitViewMenu.BottomNavigationItems>
                   <controls:SimpleNavMenuItem x:Uid="settingsMenuItem" DestinationPage="local:SettingsView" FontGlyph="&#x0046;" Tooltip="" Label="" Symbol="Accept"></controls:SimpleNavMenuItem>
                </controls:SplitViewMenu.BottomNavigationItems>
            </controls:SplitViewMenu>
            
            <Border CornerRadius="20" Opacity="0" x:Name="notification" Background="{ThemeResource SystemControlBackgroundAccentBrush}" DataContext="{Binding Source={StaticResource Core}, Path=NotificationManager}" MinWidth="100" Margin="0,0,0,90" VerticalAlignment="Bottom" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
                <Border.RenderTransform>
                    <TranslateTransform Y="130"/>
                </Border.RenderTransform>
                <!--Opacity="0" Visibility="{Binding Path=Show, Converter={StaticResource BoolToVisibility}}"-->
                <Grid Margin="20,10">
                    <TextBlock FontSize="14" TextWrapping="WrapWholeWords" Text="{Binding Path=Status, FallbackValue='Nothing Baking'}" TextAlignment="Center" Foreground="White"></TextBlock>
                </Grid>
            </Border>
            <Grid x:Name="equalizerOverlayGrid" Background="#ccdbdbdb" Margin="0,0,0,69.5">
                <Grid x:Name="equalizerGrid" Background="{ThemeResource ThemeBackground}" Padding="50" HorizontalAlignment="Center" Height="400">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ComboBox MinWidth="100" HorizontalAlignment="Right" ItemsSource="{Binding Path=Player.Equalizer.Presets}" SelectedIndex="{Binding Path=Player.Equalizer.SelectedPreset, Mode=TwoWay}" DisplayMemberPath="Name" VerticalAlignment="Center" Margin="0,0,0,0"/>
                    <ToggleSwitch x:Uid="enableEqToggleSwitch" Grid.Column="0" HorizontalAlignment="Left" Padding="0" Margin="0,0,0,0" VerticalAlignment="Center" FontWeight="SemiBold" OnContent="" OffContent="" IsOn="{Binding Source={StaticResource Core}, Path=Player.Equalizer.IsEnabled, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <StackPanel Grid.Row="1" Margin="0,10,0,0" Visibility="{Binding Path=Player.Equalizer.IsPreampAvailable}" Orientation="Horizontal" HorizontalAlignment="Center" >
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,10,0" Text="0dB" FontSize="11"/>
                        <Slider Width="140" DataContext="{StaticResource Core}" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}" SmallChange="0.1" LargeChange="1" BorderBrush="{x:Null}" Background="#FFC5C5C5"  Minimum="0" Maximum="12" Style="{StaticResource CircleSlider}" Orientation="Horizontal" Value="{Binding Path=Player.Equalizer.Preamp, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,0,0" Text="+12dB" FontSize="11"/>
                    </StackPanel>
                    <ItemsControl HorizontalAlignment="Center" ItemsSource="{Binding Path=Player.Equalizer.Bands, UpdateSourceTrigger=PropertyChanged}" Grid.Row="2" VerticalAlignment="Center" Margin="0,20,0,0">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <Slider 
                                    Height="140" 
                                    Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"
                                    BorderBrush="{x:Null}" 
                                    Background="#FFC5C5C5"
                                    Style="{StaticResource CircleSlider}" 
                                    Minimum="-14"
        							Maximum="14"
        							LargeChange="0.2"
        							SmallChange="0.1"
                                    SnapsTo="Ticks"
                                    TickPlacement="None"
                                    IsEnabled="{Binding Path=IsActive}"
                                    TickFrequency="0.1"
                                    Margin="0,0,0,0" 
                                    Orientation="Vertical" Value="{Binding Path=Gain, Mode=TwoWay}"/>
                                    <TextBlock Margin="0,10,0,0" FontFamily="Segoe UI" FontWeight="SemiBold" HorizontalAlignment="Center" Text="{Binding Path=BandCaption}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ItemsStackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <ScrollViewer Padding="0,0" VerticalScrollMode="Disabled" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Hidden">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </ControlTemplate>
                        </ItemsControl.Template>
                    </ItemsControl>
                </Grid>
            </Grid>

            <StackPanel Width="50" Name="ShowMorePanel" Visibility="{Binding ElementName=showMoreBtn, Path=IsChecked, Converter={StaticResource BoolToVisibility}}" HorizontalAlignment="Right" Background="{ThemeResource PlaybarBrush}" VerticalAlignment="Bottom" Margin="0,0,0,69.5">
                <AppBarToggleButton x:Uid="shuffleBtn" Foreground="{ThemeResource TextBrush}" IsChecked="{Binding Path=Shuffle, Mode=TwoWay}" HorizontalAlignment="Center" ToolTipService.ToolTip="" VerticalAlignment="Center" IsCompact="True" Width="40" Style="{StaticResource CustomAppBarToggleButtonStyle}" Icon="Shuffle" Height="40" Margin="0,0,0,0"/>
                <AppBarToggleButton x:Name="equalizerBtn" Foreground="{ThemeResource TextBrush}" x:Uid="showEqualizerBtn" HorizontalAlignment="Center" Command="{Binding Path=ShowEqualizerCommand}" ToolTipService.ToolTip="" VerticalAlignment="Center" IsCompact="True" Width="40" Style="{StaticResource CustomAppBarToggleButtonStyle}" Height="40" Margin="0,5,0,0" Content="&#x04c;" FontFamily="Assets/breadplayer.ttf#breadplayer" FontSize="20"/>
                <AppBarButton x:Uid="repeatBtn" Foreground="{ThemeResource TextBrush}" HorizontalAlignment="Center" BorderBrush="WhiteSmoke" ToolTipService.ToolTip="{Binding Repeat}" Icon="{Binding Repeat, Converter={StaticResource StringToIcon}}" VerticalAlignment="Center" IsCompact="True" Command="{Binding SetRepeatCommand}" Width="40" Style="{StaticResource CustomAppBarButtonStyle}" Margin="0,5,0,0" Height="40" />
                <AppBarButton HorizontalAlignment="Center" Foreground="{ThemeResource TextBrush}" BorderBrush="WhiteSmoke" ToolTipService.ToolTip="" Icon="OpenFile" VerticalAlignment="Center" IsCompact="True" Command="{Binding Path=OpenSongCommand}" Style="{StaticResource CustomAppBarButtonStyle}" Width="40" Height="40" Margin="0,5,0,5"/>
            </StackPanel>
            <Grid x:Name="playbarGrid" Height="70" VerticalAlignment="Bottom" Background="{ThemeResource PlaybarBrush}" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="Auto"/>

                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <AppBarButton x:Name="infoBar" MinWidth="375" Grid.Row="1" Command="{Binding Path=NavigateToNowPlayingViewCommand}" Grid.Column="0" Width="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{x:Null}" BorderBrush="{x:Null}">
                    <AppBarButton.Resources>
                        <MenuFlyout xmlns:Extension="using:BreadPlayer.Extensions" Extension:FlyoutMenuExtension.MyItems="{Binding Source={StaticResource Core}, Path=OptionItems}" x:Name="contextMenu" x:Key="Flyout">
                        </MenuFlyout>
                    </AppBarButton.Resources>
                    <StackPanel Orientation="Horizontal" DataContext="{StaticResource Core}" VerticalAlignment="Stretch" Height="70" Margin="0,-15,0,-30">
                        <Grid x:Name="AlbumArtGrid">
                            <Image x:Name="albumArt" Width="60" Height="50" VerticalAlignment="Center" Stretch="Uniform" Margin="5,5,5,5"  Source="{Binding Path=Player.CurrentlyPlayingFile.AttachedPicture, Converter={StaticResource PathToImage}, ConverterParameter=null}"></Image>
                            <FontIcon Glyph="&#xE93C;" Foreground="{ThemeResource TextBrush}" FontSize="52" Visibility="{Binding ElementName=albumArt, Path=Source, Converter={StaticResource BoolToVisibility}}"/>
                        </Grid>
                        <StackPanel  x:Name="tagsPanel" Orientation="Vertical" Margin="0,0,0,0" VerticalAlignment="Center">
                            <TextBlock Text="{Binding Path=Player.CurrentlyPlayingFile.Title, UpdateSourceTrigger=Explicit}" FontSize="13" FontFamily="Segoe UI Light" VerticalAlignment="Center" FontWeight="Normal" Foreground="{ThemeResource TextBrush}"/>
                            <TextBlock Text="{Binding Path=Player.CurrentlyPlayingFile.LeadArtist, UpdateSourceTrigger=Explicit}" FontSize="13" FontFamily="Segoe UI Light" VerticalAlignment="Center" FontWeight="Normal" Foreground="{ThemeResource TextBrush}"/>
                            <TextBlock Text="{Binding  Path=Player.CurrentlyPlayingFile.Album, UpdateSourceTrigger=Explicit}" FontSize="13" FontFamily="Segoe UI Light" VerticalAlignment="Center" FontWeight="Normal" Foreground="{ThemeResource TextBrush}"/>
                        </StackPanel>
                    </StackPanel>

                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="RightTapped">
                            <Behaviours:OpenMenuFlyoutAction Parameter="{StaticResource Flyout}"/>
                        </Core:EventTriggerBehavior>
                        <Core:EventTriggerBehavior EventName="Holding">
                            <Behaviours:OpenMenuFlyoutAction Parameter="{StaticResource Flyout}"/>
                        </Core:EventTriggerBehavior>
                        <Core:EventTriggerBehavior EventName="MediaChanging" SourceObject="{Binding Source={StaticResource Core}, Path=Player}">
                            <Media:ControlStoryboardAction Storyboard="{StaticResource ImageTransition}" />
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </AppBarButton>

                <TextBlock x:Name="positionTxt" Visibility="Visible" Grid.Column="1" Grid.Row="1" Margin="15,0,0,0" Text="{Binding CurrentPosition, Converter={StaticResource DoubleToTime}}" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{ThemeResource TextBrush}" FontSize="12"/>
                <Slider Visibility="Visible" x:Name="positionSlider" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Stretch" ThumbToolTipValueConverter="{StaticResource DoubleToTime}" VerticalAlignment="Center" Style="{StaticResource CircleSlider}" Maximum="{Binding Source={StaticResource Core}, Path=Player.Length, FallbackValue=100}" Value="{Binding CurrentPosition, Mode=TwoWay, UpdateSourceTrigger=Explicit, FallbackValue=0}" Background="#FFDBDBDB" BorderBrush="#FFDBDBDB" BorderThickness="0" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}" Margin="10,5,10,0"/>
                <TextBlock Visibility="{Binding ElementName=positionTxt, Path=Visibility}" Grid.Column="3" Grid.Row="1" Margin="0,0,15,0" Text="{Binding Source={StaticResource Core}, Path=Player.Length, Converter={StaticResource DoubleToTime}, UpdateSourceTrigger=Explicit}" VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="{ThemeResource TextBrush}" FontSize="12"/>

                <AppBarButton x:Uid="previousSongBtn" Foreground="{ThemeResource TextBrush}" Grid.Row="1" Grid.Column="4" BorderBrush="White" Icon="Previous" VerticalAlignment="Center" IsCompact="True" Style="{StaticResource CustomAppBarButtonStyle}" Command="{Binding PlayPreviousCommand}" Width="40" Height="40">
                    <ToolTipService.ToolTip>
                        <StackPanel Orientation="Horizontal" Width="250" DataContext="{Binding PreviousSong}" Height="Auto">
                            <Image Width="60" Height="50" Margin="5" Source="{Binding Path=AttachedPicture, Converter={StaticResource PathToImage}, ConverterParameter=null}" MaxHeight="70" Stretch="Uniform"/>
                            <StackPanel Margin="5">
                                <TextBlock Text="{Binding Path=Title, FallbackValue='No previous song', TargetNullValue='No previous song'}" FontSize="13" TextTrimming="WordEllipsis" TextWrapping="NoWrap"/>
                                <TextBlock Text="{Binding Path=LeadArtist}" Visibility="{Binding Path=LeadArtist, Converter={StaticResource BoolToVisibility}}" FontSize="12"/>
                                <TextBlock Text="{Binding Path=Album}" Visibility="{Binding Path=Album, Converter={StaticResource BoolToVisibility}}" FontSize="11"/>
                            </StackPanel>
                        </StackPanel>
                    </ToolTipService.ToolTip>
                </AppBarButton>
                <AppBarButton BorderBrush="WhiteSmoke" Foreground="{ThemeResource TextBrush}" Grid.Row="1" Grid.Column="5" Icon="{Binding PlayPauseIcon, Mode=TwoWay}" VerticalAlignment="Center" IsCompact="True" Command="{Binding PlayPauseCommand}" Style="{StaticResource CustomAppBarButtonStyle}" Width="40" Height="40" Margin="5,0,0,0"/>
                <AppBarButton x:Uid="nextSongBtn" Foreground="{ThemeResource TextBrush}" Grid.Row="1" Grid.Column="6" BorderBrush="WhiteSmoke" Icon="Next" VerticalAlignment="Center"   IsCompact="True" Style="{StaticResource CustomAppBarButtonStyle}" Command="{Binding PlayNextCommand}" Background="{ThemeResource AppBarButtonBackgroundDisabled}" Width="40" Height="40" Margin="5,0,0,0">
                    <ToolTipService.ToolTip>
                        <StackPanel Orientation="Horizontal" Width="250" DataContext="{Binding UpcomingSong}" Height="Auto">
                            <Image Width="60" Height="50" Margin="5" Source="{Binding Path=AttachedPicture, Converter={StaticResource PathToImage}, ConverterParameter=null}" MaxHeight="70" Stretch="Uniform"/>
                            <StackPanel Margin="5">
                                <TextBlock Text="{Binding Path=Title, FallbackValue='No upcoming song', TargetNullValue='No upcoming song'}" FontSize="13" TextTrimming="WordEllipsis" TextWrapping="NoWrap"/>
                                <TextBlock Text="{Binding Path=LeadArtist}" Visibility="{Binding Path=LeadArtist, Converter={StaticResource BoolToVisibility}}" FontSize="12"/>
                                <TextBlock Text="{Binding Path=Album}" Visibility="{Binding Path=Album, Converter={StaticResource BoolToVisibility}}" FontSize="11"/>
                            </StackPanel>
                        </StackPanel>
                    </ToolTipService.ToolTip>
                </AppBarButton>
                <AppBarToggleButton x:Uid="volumeBtn" Foreground="{ThemeResource TextBrush}" Grid.Row="1" Grid.Column="7" x:Name="volBtn" Icon="Volume" VerticalAlignment="Center" IsChecked="{Binding Path=IsVolumeSliderVisible, Mode=TwoWay}" IsCompact="True" Width="40" Style="{StaticResource CustomAppBarToggleButtonStyle}" Height="40" Margin="5,0,0,0"/>
                <!--<AppBarToggleButton x:Uid="shuffleBtn" Grid.Row="1" Grid.Column="8" ToolTipService.ToolTip="" x:Name="shuffleBtn" VerticalAlignment="Center" IsCompact="True" IsChecked="{Binding Path=Shuffle, Mode=TwoWay}" Width="40" Style="{StaticResource CustomAppBarToggleButtonStyle}" Icon="Shuffle" Height="40" Margin="5,0,0,0"/>
                <AppBarToggleButton x:Uid="showEqualizerBtn" Grid.Row="1"  Grid.Column="9" ToolTipService.ToolTip="" Command="{Binding Path=ShowEqualizerCommand}" Visibility="{Binding ElementName=shuffleBtn, Path=Visibility}" x:Name="equalizerBtn" VerticalAlignment="Center" IsCompact="True" Width="40" Style="{StaticResource CustomAppBarToggleButtonStyle}" Height="40" Margin="5,0,0,0" Content="&#x04c;" FontFamily="Assets/breadplayer.ttf#breadplayer" FontSize="20"/>
                <AppBarButton BorderBrush="WhiteSmoke" Grid.Row="1" Grid.Column="10" ToolTipService.ToolTip="{Binding Repeat}" x:Name="repeatBtn" Icon="{Binding Repeat, Converter={StaticResource StringToIcon}}" VerticalAlignment="Center" Visibility="{Binding ElementName=shuffleBtn, Path=Visibility}" IsCompact="True" Command="{Binding SetRepeatCommand}" Width="40" Style="{StaticResource CustomAppBarButtonStyle}" Margin="5,0,0,0" Height="40" />
                <AppBarButton x:Uid="openFileBtn" Grid.Row="1" Grid.Column="11" BorderBrush="WhiteSmoke" ToolTipService.ToolTip="" x:Name="openFileBtn" Visibility="{Binding ElementName=shuffleBtn, Path=Visibility}" Icon="OpenFile" VerticalAlignment="Center" IsCompact="True" Command="{Binding Path=OpenSongCommand}" Style="{StaticResource CustomAppBarButtonStyle}" Width="40" Height="40" Margin="5,0,5,0"/>-->
                <AppBarToggleButton x:Uid="showMoreBtn" Foreground="{ThemeResource TextBrush}" Grid.Row="1" Grid.Column="12" Name="showMoreBtn" Visibility="Visible" IsChecked="False" ToolTipService.ToolTip="" VerticalAlignment="Center" IsCompact="True" Width="40" Style="{StaticResource CustomAppBarToggleButtonStyle}" Height="40" Margin="5,0,5,0" Icon="More" FontSize="20"></AppBarToggleButton>
            </Grid>
        </Grid>
     
       
        <Grid x:Name="volumeGrid" Margin="0,0,10,69.5" DataContext="{StaticResource Core}" Background="{ThemeResource SystemControlHighlightListAccentHighBrush}" Height="60" Visibility="{Binding Source={StaticResource ShellVM}, Path=IsVolumeSliderVisible}"  VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="320">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <AppBarToggleButton x:Uid="muteBtn" BorderBrush="WhiteSmoke" IsChecked="{Binding Path=Player.IsVolumeMuted, Mode=TwoWay}" VerticalAlignment="Center" Grid.Column="0" Icon="Mute" IsCompact="True" Width="40" Style="{StaticResource CustomAppBarToggleButtonStyle}" Margin="15,0,0,0" Height="40" />
            <Slider x:Name="volumeSlider" VerticalAlignment="Center" Grid.Column="1" Value="{Binding  Path=Player.Volume, Mode=TwoWay}" Maximum="100" LargeChange="10" Style="{StaticResource CircleSlider}"  Background="#FFC5C5C5" BorderBrush="#FFC5C5C5" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}" Margin="5,0,0,0"/>
            <TextBlock Grid.Column="2" Width="40" TextAlignment="Center" Text="{Binding  Path=Player.Volume}" VerticalAlignment="Center" Margin="5,0,15,0" FontSize="20" Height="30" Foreground="#FFE0E0E0"/>
        </Grid>
        <Grid x:Name="NowPlayingGrid" Background="#ccdbdbdb" Visibility="Collapsed" Opacity="0">
            <Frame x:Name="NowPlayingFrame" Visibility="Collapsed" Width="700" Margin="0,100" SourcePageType="local:NowPlayingView" RenderTransformOrigin="0.5,0.5"/>
        </Grid>
    </Grid>
    <Interactivity:Interaction.Behaviors>
        <Core:EventTriggerBehavior EventName="GlobalPageKeyDown">
            <Core:EventTriggerBehavior.Actions>
                <Behaviours:InvokeCommandByKeyDown Command="{Binding PlayPauseCommand}" PressedKey="P" DoubleKeyCommand="True"/>
                <Behaviours:InvokeCommandByKeyDown Command="{Binding PlayNextCommand}" PressedKeyCode="190" DoubleKeyCommand="True"/>
                <Behaviours:InvokeCommandByKeyDown Command="{Binding PlayPreviousCommand}" PressedKeyCode="188" DoubleKeyCommand="True"/>
                <Behaviours:InvokeCommandByKeyDown Command="{Binding SetRepeatCommand}" PressedKey="R" DoubleKeyCommand="True"/>
                <Behaviours:InvokeCommandByKeyDown Command="{Binding ShowEqualizerCommand}" PressedKey="E" DoubleKeyCommand="True"/>
                <Behaviours:InvokeCommandByKeyDown Command="{Binding OpenSongCommand}" PressedKey="O" DoubleKeyCommand="True"/>
                <Behaviours:InvokeCommandByKeyDown Command="{Binding MuteCommand}" PressedKey="M" DoubleKeyCommand="True"/>
                <Behaviours:InvokeCommandByKeyDown Command="{Binding Source={StaticResource Core}, Path=ShowPropertiesCommand}" PressedKey="I" DoubleKeyCommand="True"/>

                <!--Seek Key bindings-->
                <Behaviours:InvokeCommandByKeyDown Command="{Binding SeekForwardCommand}" PressedKey="Right" DoubleKeyCommand="True"/>
                <Behaviours:InvokeCommandByKeyDown Command="{Binding SeekBackwardCommand}" PressedKey="Left" DoubleKeyCommand="True"/>
               
                <!--Volume Key bindings-->
                <Behaviours:InvokeCommandByKeyDown Command="{Binding IncreaseVolumeCommand}" PressedKeyCode="187" DoubleKeyCommand="True"/>
                <Behaviours:InvokeCommandByKeyDown Command="{Binding DecreaseVolumeCommand}" PressedKeyCode="189" DoubleKeyCommand="True"/>
            </Core:EventTriggerBehavior.Actions>
        </Core:EventTriggerBehavior>
    </Interactivity:Interaction.Behaviors>
</Page>