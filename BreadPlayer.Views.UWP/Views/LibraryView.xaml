<Page x:Name="LibView"
    x:Class="BreadPlayer.LibraryView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:Behaviours="using:BreadPlayer.Behaviours"
      xmlns:BPControls="using:BreadPlayer.Controls"
      xmlns:Converter="using:BreadPlayer.Converters"
      xmlns:Extensions="using:BreadPlayer.Extensions"
      xmlns:StateTriggers="using:BreadPlayer.StateTriggers"
      xmlns:Models="using:BreadPlayer.Core.Models"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Media="using:Microsoft.Xaml.Interactions.Media"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      mc:Ignorable="d" DataContext="{Binding Source={StaticResource LibVM}}">
    <Page.Resources>
        <ResourceDictionary>            
            <Converter:BoolToSelectionModeConverter x:Key="BoolToSelectionMode"/>


            <Extensions:BindableFlyout x:Key="PlaylistsFlyout" ItemsSource="{Binding Source={StaticResource Core}, Path=OptionItems}" Placement="Right"></Extensions:BindableFlyout>

            <MenuFlyout x:Key="Flyout">
                <MenuFlyoutItem x:Name="playMenuItem" Text="Play" DataContext="{StaticResource LibVM}"
                                        CommandParameter="{Binding ElementName=ContentPresenter, Path=Content}"
                                          Command="{Binding Path=PlayCommand}"/>
                <!--<MenuFlyoutSubItem x:Name="addto" Extensions:MenuExtension.MyItems="{Binding Options}" DataContext="{StaticResource LibVM}" Text="Add to">
                                        </MenuFlyoutSubItem>-->
                <MenuFlyoutItem Text="Open Song Location"
                                        DataContext="{Binding Source={StaticResource Core}}"
                                        Command="{Binding OpenSongLocationCommand}"
                                        CommandParameter="{Binding ElementName=playMenuItem, Path=CommandParameter}"/>
                <MenuFlyoutItem Text="Relocate Song"
                                         DataContext="{Binding ElementName=playMenuItem, Path=DataContext}"
                                        Command="{Binding RelocateSongCommand}"
                                        CommandParameter="{Binding ElementName=playMenuItem, Path=CommandParameter}"/>
                <MenuFlyoutItem Text="Change Album Art"
                                        DataContext="{Binding Source={StaticResource Core}}"
                                        Command="{Binding ChangeAlbumArtCommand}"
                                        CommandParameter="{Binding ElementName=playMenuItem, Path=CommandParameter}"/>
                <MenuFlyoutItem Text="Stop Playing After This Song"
                                        DataContext="{Binding ElementName=playMenuItem, Path=DataContext}"
                                        Command="{Binding Path=StopAfterCommand}"
                                        CommandParameter="{Binding ElementName=playMenuItem, Path=CommandParameter}"/>
                <MenuFlyoutItem Text="Delete"
                                        Command="{Binding Source={StaticResource LibVM}, Path=DeleteCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}">
                </MenuFlyoutItem>
                <MenuFlyoutItem Text="Properties"
                                                    DataContext="{Binding Source={StaticResource Core}}"                                       
                                        Tag="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        Command="{Binding ShowPropertiesCommand}"
                                        CommandParameter="{Binding ElementName=playMenuItem, Path=CommandParameter}"/>

            </MenuFlyout>


            <DataTemplate x:Key="MediafileUnselectedTemplate" x:DataType="Models:Mediafile">
                <Grid Height="50" x:Name="MainGrid" Background="Transparent" Margin="-12,0,-12,0" Padding="10,0,40,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="titleTxt" x:Phase="0" Width="10000" Grid.Column="1" Margin="0,0,5,0" TextWrapping="NoWrap" FontSize="14" TextTrimming="Clip" Text="{x:Bind Title}" VerticalAlignment="Center" Extensions:TextBlockExtensions.TextType="{Binding Source={StaticResource Core}, Path=SettingsVm.UiTextType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock x:Name="artistTxt" x:Phase="1" Width="10000" Grid.Column="2" Visibility="Visible" Margin="15,0,0,0" FontSize="13" Text="{x:Bind LeadArtist}"  VerticalAlignment="Center" Extensions:TextBlockExtensions.TextType="{Binding Source={StaticResource Core}, Path=SettingsVm.UiTextType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock x:Name="albumTxt" x:Phase="2" Width="10000" Grid.Column="3" Visibility="Visible" Margin="15,0,0,0" FontSize="13" Text="{x:Bind Album}" VerticalAlignment="Center" Extensions:TextBlockExtensions.TextType="{Binding Source={StaticResource Core}, Path=SettingsVm.UiTextType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock x:Name="durationTxt" x:Phase="3" Width="50" Grid.Column="4" Visibility="Visible" Margin="15,0,0,0" FontSize="13" Tag="Numerical" Text="{x:Bind Length}" VerticalAlignment="Center" Extensions:TextBlockExtensions.TextType="{Binding Source={StaticResource Core}, Path=SettingsVm.UiTextType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Border Background="Transparent" ToolTipService.ToolTip="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content.Title}" Height="50" Grid.ColumnSpan="9">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="DoubleTapped">
                                <Core:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" Command="{Binding Source={StaticResource LibVM},Path=PlayCommand}"></Core:InvokeCommandAction>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="RightTapped">
                                <Core:EventTriggerBehavior.Actions>
                                    <Behaviours:OpenMenuFlyoutAction Parameter="{StaticResource Flyout}"/>
                                </Core:EventTriggerBehavior.Actions>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="Tapped">
                                <Core:EventTriggerBehavior.Actions>
                                    <Core:CallMethodAction MethodName="PlayOnTap" TargetObject="{StaticResource LibVM}"></Core:CallMethodAction>
                                </Core:EventTriggerBehavior.Actions>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="Holding">
                                <Behaviours:OpenMenuFlyoutAction Parameter="{StaticResource Flyout}"/>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                            </Core:EventTriggerBehavior>
                         
                            <Core:DataTriggerBehavior Binding="{Binding Path=IsSelected}" Value="False" ComparisonCondition="Equal">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Collapsed"/>
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="{Binding ElementName=FavoriteButton, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"/>
                            </Core:DataTriggerBehavior>
                            <Core:DataTriggerBehavior Binding="{Binding Path=IsSelected}" Value="True" ComparisonCondition="Equal">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                            </Core:DataTriggerBehavior>
                            <Core:DataTriggerBehavior Binding="{Binding ElementName=FavoriteButton, Path=IsChecked}">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                            </Core:DataTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </Border>
                    <ToggleButton Name="FavoriteButton"  Background="Transparent" Visibility="Collapsed" HorizontalAlignment="Left" Content="&#xEB51;" Command="{Binding Source={StaticResource LibVM}, Path=AddToFavoritesCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" DataContext="{Binding ElementName=ContentPresenter, Path=Content}" IsChecked="{Binding Path=IsFavorite, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="0,0,0,0" Width="40" Height="40" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Style="{StaticResource FavoriteButtonStyle}">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </ToggleButton>
                    <StackPanel x:Name="ButtonsStack" Grid.Column="1" Width="100" HorizontalAlignment="Right" Visibility="Collapsed" Height="50" VerticalAlignment="Stretch" Background="{Binding ElementName=MainGrid, Path=Background}" Orientation="Horizontal">
                        <Button x:Name="playBtn" Grid.Column="1" ToolTipService.ToolTip="Play" DataContext="{Binding ElementName=LayoutRoot, Path=DataContext}"
                                          Width="50" Visibility="Visible"
                                          VerticalAlignment="Stretch" Background="Transparent"
                                          Height="50" FontSize="18" CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"
                                          Command="{Binding Source={StaticResource LibVM}, Path=PlayCommand}" Content="&#xE102;" Style="{StaticResource HyperlinkBtn}" FontFamily="Segoe MDL2 Assets">
                      </Button>
                        <Button Grid.Column="2" x:Name="button2" Content="&#xE710;"
            IsDoubleTapEnabled="False" FontSize="18"
            Visibility="Visible" ToolTipService.ToolTip="Add this song to playlist."
            Height="50"  VerticalAlignment="Stretch" Background="Transparent"
            Width="50" Style="{StaticResource HyperlinkBtn}"
            FontFamily="Segoe MDL2 Assets">

                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="Click" SourceObject="{Binding ElementName=button2}">
                                    <Behaviours:OpenMenuFlyoutAction Parameter="{StaticResource PlaylistsFlyout}"/>
                                </Core:EventTriggerBehavior>
                                <Core:EventTriggerBehavior EventName="PointerEntered">
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                        </Button>
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="PointerExited">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="{Binding Path=IsSelected, Converter={StaticResource BoolToVisibility}}"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </StackPanel>
                    <Interactivity:Interaction.Behaviors>
                        <Core:DataTriggerBehavior Binding="{Binding State, Converter={StaticResource PlayerStateToBool}}" Value="True">
                            <Media:ControlStoryboardAction>
                                <Media:ControlStoryboardAction.Storyboard>
                                    <Storyboard x:Name="myStoryboard"  AutoReverse="True" RepeatBehavior="Forever">
                                        <ColorAnimation Storyboard.TargetName="MainGrid"  Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" From="{Binding Source={ThemeResource SystemAccentColor1}, Path=Color }" To="DeepSkyBlue" Duration="0:0:6"/>
                                    </Storyboard>
                                </Media:ControlStoryboardAction.Storyboard>
                            </Media:ControlStoryboardAction>
                        </Core:DataTriggerBehavior>
                        <Core:DataTriggerBehavior Binding="{Binding State, Converter={StaticResource PlayerStateToBool}}" Value="False">
                            <Core:ChangePropertyAction TargetObject="{Binding ElementName=MainGrid}" PropertyName="Background" Value="Transparent"/>
                        </Core:DataTriggerBehavior>
                       <Core:EventTriggerBehavior EventName="PointerExited">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="{Binding Path=IsSelected, Converter={StaticResource BoolToVisibility}}"/>
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="{Binding ElementName=FavoriteButton, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"/>
                            </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </Grid>
            </DataTemplate>


            <DataTemplate x:Key="MediafileUnselectedMobileTemplate" x:DataType="Models:Mediafile">
                <Grid Height="80" x:Name="MainGrid" Background="Transparent" Margin="-12,0,-12,0" Padding="10,0,10,0">
                    <TextBlock Typography.Capitals="AllSmallCaps" TextAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="40,0,40,0" DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" FontWeight="ExtraLight" Foreground="{ThemeResource ThemeForeground}" TextTrimming="CharacterEllipsis" FontSize="17">
                <Run Text="{x:Bind Path=Title}"/>
                <LineBreak/>
                <Run Text="{x:Bind Path=LeadArtist}"/>
                <Run Text="&#x2022;"/>
                <Run Text="{x:Bind Path=Album}"/>
                    </TextBlock>
                    <Border Background="Transparent" Tag="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" ToolTipService.ToolTip="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content.Title}" Height="80" Grid.ColumnSpan="9">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="DoubleTapped">
                                <Core:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" Command="{Binding Source={StaticResource LibVM},Path=PlayCommand}"></Core:InvokeCommandAction>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="RightTapped">
                                <Core:EventTriggerBehavior.Actions>
                                    <Behaviours:OpenMenuFlyoutAction Parameter="{StaticResource Flyout}"/>
                                </Core:EventTriggerBehavior.Actions>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="Tapped">
                                <Core:EventTriggerBehavior.Actions>
                                    <Core:CallMethodAction MethodName="PlayOnTap" TargetObject="{StaticResource LibVM}"></Core:CallMethodAction>
                                </Core:EventTriggerBehavior.Actions>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="Holding">
                                <Behaviours:OpenMenuFlyoutAction Parameter="{StaticResource Flyout}"/>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                            </Core:EventTriggerBehavior>

                            <Core:DataTriggerBehavior Binding="{Binding Path=IsSelected}" Value="False" ComparisonCondition="Equal">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Collapsed"/>
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="{Binding ElementName=FavoriteButton, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"/>
                            </Core:DataTriggerBehavior>
                            <Core:DataTriggerBehavior Binding="{Binding Path=IsSelected}" Value="True" ComparisonCondition="Equal">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                            </Core:DataTriggerBehavior>
                            <Core:DataTriggerBehavior Binding="{Binding ElementName=FavoriteButton, Path=IsChecked}">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                            </Core:DataTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </Border>
                    <ToggleButton Name="FavoriteButton" x:DeferLoadStrategy="Lazy" Visibility="Collapsed" HorizontalAlignment="Left" Content="&#xEB51;" Command="{Binding Source={StaticResource LibVM}, Path=AddToFavoritesCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" DataContext="{Binding ElementName=ContentPresenter, Path=Content}" IsChecked="{Binding Path=IsFavorite, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="0,0,0,0" Width="40" Height="40" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Style="{StaticResource FavoriteButtonStyle}">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </ToggleButton>
                    <StackPanel x:Name="ButtonsStack" Grid.Column="0" Width="50" VerticalAlignment="Stretch" HorizontalAlignment="Right" Visibility="Collapsed" Height="80" Background="{Binding ElementName=MainGrid, Path=Background}" Orientation="Horizontal">
                        <Button Grid.Column="2" x:Name="button2" Content="&#xE710;"
            IsDoubleTapEnabled="False" FontSize="18"
            Visibility="Visible" ToolTipService.ToolTip="Add this song to playlist."
            Height="80"  VerticalAlignment="Center" Background="Transparent"
            Width="50" Style="{StaticResource HyperlinkBtn}"
            FontFamily="Segoe MDL2 Assets">

                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="Click" SourceObject="{Binding ElementName=button2}">
                                    <Behaviours:OpenMenuFlyoutAction Parameter="{StaticResource PlaylistsFlyout}"/>
                                </Core:EventTriggerBehavior>
                                <Core:EventTriggerBehavior EventName="PointerEntered">
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                        </Button>
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="PointerExited">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="{Binding Path=IsSelected, Converter={StaticResource BoolToVisibility}}"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </StackPanel>
                    <Interactivity:Interaction.Behaviors>
                        <Core:DataTriggerBehavior Binding="{Binding State, Converter={StaticResource PlayerStateToBool}}" Value="True">
                            <Media:ControlStoryboardAction>
                                <Media:ControlStoryboardAction.Storyboard>
                                    <Storyboard x:Name="myStoryboard"  AutoReverse="True" RepeatBehavior="Forever">
                                        <ColorAnimation Storyboard.TargetName="MainGrid"  Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" From="{Binding Source={ThemeResource SystemAccentColor1}, Path=Color }" To="DeepSkyBlue" Duration="0:0:6"/>
                                    </Storyboard>
                                </Media:ControlStoryboardAction.Storyboard>
                            </Media:ControlStoryboardAction>
                        </Core:DataTriggerBehavior>
                        <Core:DataTriggerBehavior Binding="{Binding State, Converter={StaticResource PlayerStateToBool}}" Value="False">
                            <Core:ChangePropertyAction TargetObject="{Binding ElementName=MainGrid}" PropertyName="Background" Value="Transparent"/>
                        </Core:DataTriggerBehavior>
                        <Core:EventTriggerBehavior EventName="PointerExited">
                            <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="{Binding Path=IsSelected, Converter={StaticResource BoolToVisibility}}"/>
                            <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="{Binding ElementName=FavoriteButton, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"/>
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </Grid>
            </DataTemplate>
            <!-- Style for Windows.UI.Xaml.Controls.ListViewItem -->
           
            <DataTemplate x:Key="MobileJumpListItemTemplate">
                <Button x:Name="alphabet" BorderBrush="{x:Null}" Width="60" BorderThickness="0" Height="60" FontSize="28" Background="Transparent" Content="{Binding}" FontFamily="Segoe UI Light" FontWeight="SemiLight" Style="{StaticResource HyperlinkBtn}">
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="Click" SourceObject="{Binding ElementName=alphabet}">
                            <Core:EventTriggerBehavior.Actions>
                                <Core:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=backBtn}"/>
                                <Core:ChangePropertyAction PropertyName="IsZoomedInViewActive" Value="True" TargetObject="{Binding ElementName=semanticZoom, Mode=OneWay}"/>
                            </Core:EventTriggerBehavior.Actions>
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </Button>
            </DataTemplate>
        </ResourceDictionary>
    </Page.Resources>

    <Grid x:Name="Grid" DataContext="{Binding Source={StaticResource LibVM}}">
        <Grid.Resources>
            <CollectionViewSource IsSourceGrouped="False" x:Key="Source" Source="{Binding TracksCollection.Elements}"/>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="187*"/>
            <ColumnDefinition Width="173*"/>
        </Grid.ColumnDefinitions>
        <VisualStateManager.VisualStateGroups>        
          <VisualStateGroup>                
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="fileBox.ItemTemplate" Value="{StaticResource MediafileUnselectedTemplate}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="fileBox.ItemTemplate" Value="{StaticResource MediafileUnselectedMobileTemplate}"/>
                        
                        <Setter Target="alphabetList.ItemTemplate" Value="{StaticResource MobileJumpListItemTemplate}"/>
                        <Setter Target="alphabetList.Margin" Value="0,60,0,0"/>
                        <Setter Target="semanticZoom.(Grid.Row)" Value="1" />
                        <Setter Target="semanticZoom.(Grid.RowSpan)" Value="2" />
                        <Setter Target="lonelyTxt.FontSize" Value="44"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

        </VisualStateManager.VisualStateGroups>
        <Grid.Transitions>
            <TransitionCollection>
                <EntranceThemeTransition IsStaggeringEnabled="True"
                            FromHorizontalOffset="200"/>
            </TransitionCollection>
        </Grid.Transitions>      
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="47"/>
            <RowDefinition Height="13" MinHeight="13"/>
            <RowDefinition Height="57*"/>
        </Grid.RowDefinitions>
       
        <SemanticZoom x:Name="semanticZoom" ViewChangeStarted="semanticZoom_ViewChangeStarted" Grid.Row="2" Grid.ColumnSpan="2" ScrollViewer.ZoomMode="Enabled">
            <SemanticZoom.ZoomedInView>
                <BPControls:AlternatingRowListView x:Name="fileBox" CanReorderItems="True" 
                                                   ReorderMode="Enabled" OddRowBackground="{ThemeResource OddRowBackground}" 
                                                   EvenRowBackground="{ThemeResource EvenRowBackground}"  
                                                   AllowDrop="True" Opacity="0" IsMultiSelectCheckBoxEnabled="True"
                                                   Behaviours:ListViewService.FocusBeforeSelect="True" 
                                                   SelectionMode="{Binding Path=IsMultiSelectModeEnabled, Converter={StaticResource BoolToSelectionMode}, UpdateSourceTrigger=PropertyChanged}" 
                                                   SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                   IncrementalLoadingThreshold="10" 
                                                   IncrementalLoadingTrigger="Edge" 
                                                   DataFetchSize="10" 
                                                   ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                   ItemsSource="{Binding Source={StaticResource Source}, UpdateSourceTrigger=Explicit}" 
                                                   Grid.Row="2" Grid.ColumnSpan="2" DragOver="fileBox_DragOver">
                    <BPControls:AlternatingRowListView.ItemsPanel>
                        <ItemsPanelTemplate >
                            <ItemsStackPanel Orientation="Vertical">
                                <ItemsStackPanel.ChildrenTransitions>
                                    <TransitionCollection>
                                        <EntranceThemeTransition
                            FromHorizontalOffset="200" />
                                    </TransitionCollection>
                                </ItemsStackPanel.ChildrenTransitions>
                            </ItemsStackPanel>
                        </ItemsPanelTemplate>
                    </BPControls:AlternatingRowListView.ItemsPanel>
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="KeyUp" SourceObject="{Binding ElementName=fileBox}">
                            <Core:EventTriggerBehavior.Actions>
                                <Behaviours:InvokeCommandByKeyDown CommandParameter="{Binding ElementName=fileBox, Path=SelectedItem}" Command="{Binding PlayCommand}" PressedKey="Enter" DoubleKeyCommand="False"/>
                            </Core:EventTriggerBehavior.Actions>
                        </Core:EventTriggerBehavior>
                        <Core:EventTriggerBehavior EventName="KeyDown" SourceObject="{Binding ElementName=fileBox}">
                            <Core:EventTriggerBehavior.Actions>
                                <Behaviours:InvokeCommandByKeyDown CommandParameter="{Binding ElementName=fileBox}" Command="{Binding DeleteCommand}" PressedKey="Delete" DoubleKeyCommand="False"/>
                                <Behaviours:InvokeCommandByKeyDown CommandParameter="{Binding ElementName=fileBox, Path=SelectedItem}" Command="{Binding Source={StaticResource Core}, Path=ShowPropertiesCommand}" PressedKey="T" DoubleKeyCommand="True"/>
                                <Behaviours:InvokeCommandByKeyDown CommandParameter="{Binding ElementName=fileBox, Path=SelectedItem}" Command="{Binding Path=AddToFavoritesCommand}" PressedKey="F" DoubleKeyCommand="True"/>
                            </Core:EventTriggerBehavior.Actions>
                        </Core:EventTriggerBehavior>
                        <Core:EventTriggerBehavior EventName="SelectionChanged">
                            <Core:EventTriggerBehavior.Actions>
                                <Core:CallMethodAction MethodName="SelectionChanged" TargetObject="{Binding Source={StaticResource LibVM}}"/>
                                <!--<Core:InvokeCommandAction  CommandParameter="{Binding ElementName=fileBox}" Command="{Binding SelectionChangedCommand}"/>-->
                            </Core:EventTriggerBehavior.Actions>
                        </Core:EventTriggerBehavior>
                        <Core:EventTriggerBehavior EventName="Drop">
                            <Core:CallMethodAction MethodName="DropFiles" TargetObject="{Binding Source={StaticResource LibVM}}"/>
                        </Core:EventTriggerBehavior>
                        <Core:EventTriggerBehavior EventName="MusicLibraryLoaded" SourceObject="{StaticResource LibVM}">
                            <Media:ControlStoryboardAction>
                                <Media:ControlStoryboardAction.Storyboard>
                                    <Storyboard Storyboard.TargetName="fileBox" Storyboard.TargetProperty="Opacity">
                                        <DoubleAnimation To="1" Duration="0:0:0.8" FillBehavior="HoldEnd"/>
                                    </Storyboard>
                                </Media:ControlStoryboardAction.Storyboard>
                            </Media:ControlStoryboardAction>
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                    <BPControls:AlternatingRowListView.GroupStyle>
                        <GroupStyle HidesIfEmpty="True">
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <Button x:Name="groupBtn" Content="{Binding Key}" FontSize="26" FontFamily="Segoe UI" Background="Transparent" Margin="10,0,0,0" FontWeight="Bold" Style="{StaticResource HyperlinkBtn}">
                                        <Interactivity:Interaction.Behaviors>
                                            <Core:EventTriggerBehavior EventName="Click" SourceObject="{Binding ElementName=groupBtn}">
                                                <Core:EventTriggerBehavior.Actions>
                                                    <Core:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetObject="{Binding ElementName=backBtn}"/>
                                                </Core:EventTriggerBehavior.Actions>  
                                            </Core:EventTriggerBehavior>
                                        </Interactivity:Interaction.Behaviors>
                                    </Button>
                                    <!--<TextBlock Text='{Binding Key}' Foreground="Gray" FontSize="25" Margin="5" />-->
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </BPControls:AlternatingRowListView.GroupStyle>
                    <BPControls:AlternatingRowListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                        </Style>
                    </BPControls:AlternatingRowListView.ItemContainerStyle>
                </BPControls:AlternatingRowListView>
            </SemanticZoom.ZoomedInView>
            <SemanticZoom.ZoomedOutView>
                <GridView x:Name="alphabetList" Visibility="Collapsed" x:DeferLoadStrategy="Lazy" VerticalAlignment="Center" HorizontalAlignment="Center" MaxWidth="660" ItemsSource="{Binding AlphabetList}" Margin="0">
                    <GridView.ItemTemplate>
                        <DataTemplate>
                            <Button x:Name="alphabet" BorderBrush="{x:Null}" MinWidth="90" BorderThickness="0" Height="60" FontSize="36" Background="Transparent" Content="{Binding}" FontFamily="Segoe UI Light" FontWeight="ExtraLight" Style="{StaticResource HyperlinkBtn}">
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="Click" SourceObject="{Binding ElementName=alphabet}">
                                        <Core:EventTriggerBehavior.Actions>
                                            <Core:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=backBtn}"/>
                                            <Core:ChangePropertyAction PropertyName="IsZoomedInViewActive" Value="True" TargetObject="{Binding ElementName=semanticZoom, Mode=OneWay}"/>
                                        </Core:EventTriggerBehavior.Actions>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                            </Button>
                        </DataTemplate>
                    </GridView.ItemTemplate>                  
                </GridView>
            </SemanticZoom.ZoomedOutView>
        </SemanticZoom>

        <Button x:Uid="backBtn" x:Name="backBtn" ToolTipService.ToolTip="" Background="{x:Null}" x:DeferLoadStrategy="Lazy" Visibility="Collapsed" FontSize="30" BorderThickness="0" Content="&#xE72B;" FontFamily="Segoe MDL2 Assets" Grid.Row="2" Grid.ColumnSpan="3" Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Center"  Style="{StaticResource HyperlinkBtn}">
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="Click" SourceObject="{Binding ElementName=backBtn}">
                    <Core:EventTriggerBehavior.Actions>
                        <Core:ChangePropertyAction PropertyName="IsZoomedInViewActive" Value="True" TargetObject="{Binding ElementName=semanticZoom, Mode=OneWay}"/>
                        <Core:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=backBtn}"/>
                    </Core:EventTriggerBehavior.Actions>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>
        <StackPanel x:Name="lonelyTextPanel" Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.ColumnSpan="2" Visibility="{Binding Path=SongCount, UpdateSourceTrigger=Explicit, Converter={StaticResource BoolToVisibility}}">
            <TextBlock x:Uid="lonelyTextBlock" x:Name="lonelyTxt" Text="Its lonely here :(" FontSize="72" FontFamily="Segoe UI Light" FontWeight="ExtraLight" Foreground="{ThemeResource ThemeForeground}"/>
            <Button x:Uid="addSomeSongsBtn" Content="Add some songs" Background="Transparent" HorizontalAlignment="Center" FontSize="22" Command="{Binding Source={StaticResource Core}, Path=SettingsVm.LoadCommand}" Foreground="{ThemeResource ThemeForeground}" Style="{StaticResource HyperlinkBtn}"/>
        </StackPanel>       
        <Interactivity:Interaction.Behaviors>
            <Core:EventTriggerBehavior EventName="Loaded">
                <Core:InvokeCommandAction Command="{Binding InitCommand}" CommandParameter="{Binding ElementName=Grid}"/>
            </Core:EventTriggerBehavior>
        </Interactivity:Interaction.Behaviors>       
    </Grid>

</Page>
