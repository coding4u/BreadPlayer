<Page
    x:Class="BreadPlayer.PlaylistView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BreadPlayer"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" xmlns:Services="using:BreadPlayer.Services"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core" xmlns:Extensions="using:BreadPlayer.Extensions" xmlns:Behaviours="using:BreadPlayer.Behaviours" 
    xmlns:StateTriggers="using:BreadPlayer.StateTriggers"
    xmlns:Converters="using:BreadPlayer.Converters"
        xmlns:Models="using:BreadPlayer.Core.Models"
      xmlns:Media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:VM="using:BreadPlayer.ViewModels"
  mc:Ignorable="d">
    <Page.Resources>
        <ResourceDictionary>            
            <Converters:BoolToSelectionModeConverter x:Key="BoolToSelectionMode"/>
           
            <MenuFlyout x:Key="Flyout">
                <MenuFlyoutItem x:Uid="playMenuItem" x:Name="playMenuItem" Text="" DataContext="{StaticResource LibVM}"
                                        CommandParameter="{Binding ElementName=ContentPresenter, Path=Content}"
                                          Command="{Binding Path=PlayCommand}"/>
                <MenuFlyoutItem x:Uid="openSongLocationMenuItem" Text=""
                                        DataContext="{Binding Source={StaticResource Core}}"
                                        Command="{Binding OpenSongLocationCommand}"
                                        CommandParameter="{Binding ElementName=playMenuItem, Path=CommandParameter}"/>
                <MenuFlyoutItem x:Uid="relocateSongMenuItem" Text=""
                                         DataContext="{Binding ElementName=playMenuItem, Path=DataContext}"
                                        Command="{Binding RelocateSongCommand}"
                                        CommandParameter="{Binding ElementName=playMenuItem, Path=CommandParameter}"/>
                <MenuFlyoutItem x:Uid="changeAlbumArtMenuItem" Text=""
                                        DataContext="{Binding Source={StaticResource Core}}"
                                        Command="{Binding ChangeAlbumArtCommand}"
                                        CommandParameter="{Binding ElementName=playMenuItem, Path=CommandParameter}"/>
                <MenuFlyoutItem x:Uid="stopPlayingAfterMenuItem" Text=""
                                        DataContext="{Binding ElementName=playMenuItem, Path=DataContext}"
                                        Command="{Binding Path=StopAfterCommand}"
                                        CommandParameter="{Binding ElementName=playMenuItem, Path=CommandParameter}"/>
                <MenuFlyoutItem x:Uid="deleteFromPlaylistMenuItem" Text=""
                                        Command="{Binding Source={StaticResource PlaylistVM}, Path=DeleteCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}">
                </MenuFlyoutItem>
                <MenuFlyoutItem x:Uid="propertiesMenuItem" Text=""
                                                    DataContext="{Binding Source={StaticResource Core}}"                                       
                                        Tag="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        Command="{Binding ShowPropertiesCommand}"
                                        CommandParameter="{Binding ElementName=playMenuItem, Path=CommandParameter}"/>

            </MenuFlyout>


            <DataTemplate x:Key="MediafileUnselectedTemplate" x:DataType="Models:Mediafile">
                <Grid Height="50" x:Name="MainGrid" Background="Transparent" Margin="-12,0,-12,0" Padding="10,0,40,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="titleTxt" x:Phase="0" Width="10000" Grid.Column="1" Margin="0,0,5,0" TextWrapping="NoWrap" FontSize="14" TextTrimming="Clip" Text="{x:Bind Title}" VerticalAlignment="Center" Extensions:TextBlockExtensions.TextType="{Binding Source={StaticResource Core}, Path=SettingsVm.UiTextType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock x:Name="artistTxt" x:Phase="1" Width="10000" Grid.Column="2" Visibility="Visible" Margin="15,0,0,0" FontSize="13" Text="{x:Bind LeadArtist}"  VerticalAlignment="Center" Extensions:TextBlockExtensions.TextType="{Binding Source={StaticResource Core}, Path=SettingsVm.UiTextType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock x:Name="albumTxt" x:Phase="2" Width="10000" Grid.Column="3" Visibility="Visible" Margin="15,0,0,0" FontSize="13" Text="{x:Bind Album}" VerticalAlignment="Center" Extensions:TextBlockExtensions.TextType="{Binding Source={StaticResource Core}, Path=SettingsVm.UiTextType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock x:Name="durationTxt" x:Phase="3" Width="50" Grid.Column="4" Visibility="Visible" Margin="15,0,0,0" FontSize="13" Tag="Numerical" Text="{x:Bind Length}" VerticalAlignment="Center" Extensions:TextBlockExtensions.TextType="{Binding Source={StaticResource Core}, Path=SettingsVm.UiTextType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Border Background="Transparent" ToolTipService.ToolTip="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content.Title}" Height="50" Grid.ColumnSpan="9">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="DoubleTapped">
                                <Core:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" Command="{Binding Source={StaticResource LibVM},Path=PlayCommand}"></Core:InvokeCommandAction>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="RightTapped">
                                <Core:EventTriggerBehavior.Actions>
                                    <Behaviours:OpenMenuFlyoutAction Parameter="{StaticResource Flyout}"/>
                                </Core:EventTriggerBehavior.Actions>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="Tapped">
                                <Core:EventTriggerBehavior.Actions>
                                    <Core:CallMethodAction MethodName="PlayOnTap" TargetObject="{StaticResource LibVM}"></Core:CallMethodAction>
                                </Core:EventTriggerBehavior.Actions>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="Holding">
                                <Behaviours:OpenMenuFlyoutAction Parameter="{StaticResource Flyout}"/>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                            </Core:EventTriggerBehavior>

                            <Core:DataTriggerBehavior Binding="{Binding Path=IsSelected}" Value="False" ComparisonCondition="Equal">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Collapsed"/>
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="{Binding ElementName=FavoriteButton, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"/>
                            </Core:DataTriggerBehavior>
                            <Core:DataTriggerBehavior Binding="{Binding Path=IsSelected}" Value="True" ComparisonCondition="Equal">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                            </Core:DataTriggerBehavior>
                            <Core:DataTriggerBehavior Binding="{Binding ElementName=FavoriteButton, Path=IsChecked}">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                            </Core:DataTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </Border>
                    <ToggleButton Name="FavoriteButton"  Background="Transparent" Visibility="Collapsed" HorizontalAlignment="Left" Content="&#xEB51;" Command="{Binding Source={StaticResource LibVM}, Path=AddToFavoritesCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" DataContext="{Binding ElementName=ContentPresenter, Path=Content}" IsChecked="{Binding Path=IsFavorite, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="0,0,0,0" Width="40" Height="40" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Style="{StaticResource FavoriteButtonStyle}">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </ToggleButton>
                    <StackPanel x:Name="ButtonsStack" Grid.Column="1" Width="100" HorizontalAlignment="Right" Visibility="Collapsed" Height="50" VerticalAlignment="Stretch" Background="{Binding ElementName=MainGrid, Path=Background}" Orientation="Horizontal">
                        <Button x:Name="playBtn" Grid.Column="1" ToolTipService.ToolTip="Play" DataContext="{Binding ElementName=LayoutRoot, Path=DataContext}"
                                          Width="50" Visibility="Visible"
                                          VerticalAlignment="Stretch" Background="Transparent"
                                          Height="50" FontSize="18" CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"
                                          Command="{Binding Source={StaticResource LibVM}, Path=PlayCommand}" Content="&#xE102;" Style="{StaticResource HyperlinkBtn}" FontFamily="Segoe MDL2 Assets">
                        </Button>
                        <Button x:Uid="listItemAddBtn" Grid.Column="2" x:Name="button2" Content="&#xE74D;"
                                    IsDoubleTapEnabled="False" FontSize="18"
                                    Visibility="Visible" ToolTipService.ToolTip=""
                                    Height="50"  VerticalAlignment="Stretch"  Background="Transparent"
                                    Width="50" Style="{StaticResource HyperlinkBtn}"
                                                 Command="{Binding Source={StaticResource PlaylistVM}, Path=DeleteCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"
                                    FontFamily="Segoe MDL2 Assets">
                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="PointerEntered">
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                        </Button>
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="PointerExited">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="{Binding Path=IsSelected, Converter={StaticResource BoolToVisibility}}"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </StackPanel>
                    <Interactivity:Interaction.Behaviors>
                        <Core:DataTriggerBehavior Binding="{Binding State, Converter={StaticResource PlayerStateToBool}}" Value="True">
                            <Media:ControlStoryboardAction>
                                <Media:ControlStoryboardAction.Storyboard>
                                    <Storyboard x:Name="myStoryboard"  AutoReverse="True" RepeatBehavior="Forever">
                                        <ColorAnimation Storyboard.TargetName="MainGrid"  Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" From="{Binding Source={ThemeResource SystemAccentColor1}, Path=Color }" To="DeepSkyBlue" Duration="0:0:6"/>
                                    </Storyboard>
                                </Media:ControlStoryboardAction.Storyboard>
                            </Media:ControlStoryboardAction>
                        </Core:DataTriggerBehavior>
                        <Core:DataTriggerBehavior Binding="{Binding State, Converter={StaticResource PlayerStateToBool}}" Value="False">
                            <Core:ChangePropertyAction TargetObject="{Binding ElementName=MainGrid}" PropertyName="Background" Value="Transparent"/>
                        </Core:DataTriggerBehavior>
                        <Core:EventTriggerBehavior EventName="PointerExited">
                            <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="{Binding Path=IsSelected, Converter={StaticResource BoolToVisibility}}"/>
                            <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="{Binding ElementName=FavoriteButton, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"/>
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </Grid>
            </DataTemplate>

            <Extensions:BindableFlyout x:Key="PlaylistsFlyout" ItemsSource="{Binding Source={StaticResource Core}, Path=OptionItems}" Placement="Right"></Extensions:BindableFlyout>

            <DataTemplate x:Key="MediafileUnselectedMobileTemplate" x:DataType="Models:Mediafile">
                <Grid Height="80" x:Name="MainGrid" Background="Transparent" Margin="-12,0,-12,0" Padding="10,0,10,0">
                    <TextBlock Typography.Capitals="AllSmallCaps" TextAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="40,0,40,0" DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" FontWeight="ExtraLight" Foreground="{ThemeResource ThemeForeground}" TextTrimming="CharacterEllipsis" FontSize="17">
                <Run Text="{x:Bind Path=Title}"/>
                <LineBreak/>
                <Run Text="{x:Bind Path=LeadArtist}"/>
                <Run Text="&#x2022;"/>
                <Run Text="{x:Bind Path=Album}"/>
                    </TextBlock>
                    <Border Background="Transparent" Tag="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" ToolTipService.ToolTip="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content.Title}" Height="80" Grid.ColumnSpan="9">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="DoubleTapped">
                                <Core:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" Command="{Binding Source={StaticResource LibVM},Path=PlayCommand}"></Core:InvokeCommandAction>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="RightTapped">
                                <Core:EventTriggerBehavior.Actions>
                                    <Behaviours:OpenMenuFlyoutAction Parameter="{StaticResource Flyout}"/>
                                </Core:EventTriggerBehavior.Actions>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="Tapped">
                                <Core:EventTriggerBehavior.Actions>
                                    <Core:CallMethodAction MethodName="PlayOnTap" TargetObject="{StaticResource LibVM}"></Core:CallMethodAction>
                                </Core:EventTriggerBehavior.Actions>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="Holding">
                                <Behaviours:OpenMenuFlyoutAction Parameter="{StaticResource Flyout}"/>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                            </Core:EventTriggerBehavior>

                            <Core:DataTriggerBehavior Binding="{Binding Path=IsSelected}" Value="False" ComparisonCondition="Equal">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Collapsed"/>
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="{Binding ElementName=FavoriteButton, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"/>
                            </Core:DataTriggerBehavior>
                            <Core:DataTriggerBehavior Binding="{Binding Path=IsSelected}" Value="True" ComparisonCondition="Equal">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                            </Core:DataTriggerBehavior>
                            <Core:DataTriggerBehavior Binding="{Binding ElementName=FavoriteButton, Path=IsChecked}">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                            </Core:DataTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </Border>
                    <ToggleButton Name="FavoriteButton" x:DeferLoadStrategy="Lazy" Visibility="Collapsed" HorizontalAlignment="Left" Content="&#xEB51;" Command="{Binding Source={StaticResource LibVM}, Path=AddToFavoritesCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" DataContext="{Binding ElementName=ContentPresenter, Path=Content}" IsChecked="{Binding Path=IsFavorite, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="0,0,0,0" Width="40" Height="40" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Style="{StaticResource FavoriteButtonStyle}">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="Visible"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </ToggleButton>
                    <StackPanel x:Name="ButtonsStack" Grid.Column="0" Width="50" VerticalAlignment="Stretch" HorizontalAlignment="Right" Visibility="Collapsed" Height="80" Background="{Binding ElementName=MainGrid, Path=Background}" Orientation="Horizontal">
                        <Button x:Uid="listItemDeleteBtn" Grid.Column="2" x:Name="button2" Content="&#xE74D;"
                                    IsDoubleTapEnabled="False" FontSize="18"
                                    Visibility="Visible" ToolTipService.ToolTip=""
                                    Height="80"  VerticalAlignment="Stretch"  Background="Transparent"
                                    Width="50" Style="{StaticResource HyperlinkBtn}"
                                                 Command="{Binding Source={StaticResource PlaylistVM}, Path=DeleteCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"
                                    FontFamily="Segoe MDL2 Assets">
                            <Interactivity:Interaction.Behaviors>
                                <Core:EventTriggerBehavior EventName="PointerEntered">
                                    <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                                </Core:EventTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                        </Button>
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="Visible"/>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="PointerExited">
                                <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="{Binding Path=IsSelected, Converter={StaticResource BoolToVisibility}}"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </StackPanel>
                    <Interactivity:Interaction.Behaviors>
                        <Core:DataTriggerBehavior Binding="{Binding State, Converter={StaticResource PlayerStateToBool}}" Value="True">
                            <Media:ControlStoryboardAction>
                                <Media:ControlStoryboardAction.Storyboard>
                                    <Storyboard x:Name="myStoryboard"  AutoReverse="True" RepeatBehavior="Forever">
                                        <ColorAnimation Storyboard.TargetName="MainGrid"  Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" From="{Binding Source={ThemeResource SystemAccentColor1}, Path=Color }" To="DeepSkyBlue" Duration="0:0:6"/>
                                    </Storyboard>
                                </Media:ControlStoryboardAction.Storyboard>
                            </Media:ControlStoryboardAction>
                        </Core:DataTriggerBehavior>
                        <Core:DataTriggerBehavior Binding="{Binding State, Converter={StaticResource PlayerStateToBool}}" Value="False">
                            <Core:ChangePropertyAction TargetObject="{Binding ElementName=MainGrid}" PropertyName="Background" Value="Transparent"/>
                        </Core:DataTriggerBehavior>
                        <Core:EventTriggerBehavior EventName="PointerExited">
                            <Core:ChangePropertyAction TargetObject="{Binding ElementName=ButtonsStack}" PropertyName="Visibility" Value="{Binding Path=IsSelected, Converter={StaticResource BoolToVisibility}}"/>
                            <Core:ChangePropertyAction TargetObject="{Binding ElementName=FavoriteButton}" PropertyName="Visibility" Value="{Binding ElementName=FavoriteButton, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"/>
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </Grid>
            </DataTemplate>

            <MenuFlyout x:Key="ExtraMenuFlyout" MenuFlyoutPresenterStyle="{StaticResource CustomFlyoutPresenter}">
                <MenuFlyoutItem x:Uid="deletePlaylistMenuItem" Text="Delete Playlist" DataContext="{Binding Source={StaticResource PlaylistVM}}" Command="{Binding DeletePlaylistCommand}" />
                <MenuFlyoutItem x:Uid="renamePlaylistMenuItem" Text="Rename Playlist" DataContext="{Binding Source={StaticResource PlaylistVM}}" Command="{Binding RenamePlaylistCommand}"/>
                <MenuFlyoutItem x:Uid="enableMultiSelectMenuItem" Text="Enable Multi Selection" Command="{Binding Source={StaticResource LibVM}, Path=ChangeSelectionModeCommand}"/>
                <MenuFlyoutItem x:Uid="disableMultiSelectMenuItem" Text="Disable Multi Selection" IsEnabled="{Binding Source={StaticResource LibVM}, Path=IsMultiSelectModeEnabled}" Command="{Binding Source={StaticResource LibVM}, Path=ChangeSelectionModeCommand}"/>
            </MenuFlyout>
            <CollectionViewSource IsSourceGrouped="False" x:Key="Source" Source="{Binding Songs}"/>
        </ResourceDictionary>
    </Page.Resources>
    
        <Grid >
        <VisualStateManager.VisualStateGroups>           
            <VisualStateGroup>               
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="headerText.FontSize" Value="60" />
                        <Setter Target="headerDesc.FontSize" Value="24" />
                        <Setter Target="fileBox.ItemTemplate" Value="{StaticResource MediafileUnselectedTemplate}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="headerText.TextAlignment" Value="Center" />
                        <Setter Target="headerText.FontSize" Value="34" />
                        <Setter Target="headerText.Margin" Value="0" />
                        <Setter Target="headerStack.Margin" Value="0,60,0,0" />
                        <Setter Target="headerDesc.Margin" Value="0" />
                        <Setter Target="headerDesc.TextAlignment" Value="Center" />
                        <Setter Target="fileBox.ItemTemplate" Value="{StaticResource MediafileUnselectedMobileTemplate}"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>          
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <!--<RowDefinition Height="{Binding ElementName=playlistScrollViewer, Path=ActualHeight}"/>-->
            </Grid.RowDefinitions>
            <Border x:Name="art" Margin="0,-154,0,0" Height="354" VerticalAlignment="Top" >
                <Border.Background>
                    <ImageBrush Stretch="UniformToFill" ImageSource="{Binding PlaylistArt}"/>
                </Border.Background>
            <Grid>
                <Border Background="#99000000" />
                <Grid Grid.Row="0" RequestedTheme="Dark" Margin="0,100,0,0">
                    <StackPanel x:Name="headerStack" Margin="35,40,0,0" Grid.Row="0" >
                        <TextBlock x:Name="headerText" MaxLines="3" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{x:Bind ((VM:PlaylistViewModel)DataContext).Playlist.Name,Mode=OneWay, FallbackValue='Unknown Playlist'}" FontSize="60" FontWeight="Bold" FontFamily="Segoe UI Light"/>
                        <TextBlock x:Name="headerDesc" MaxLines="2" TextWrapping="WrapWholeWords" TextTrimming="CharacterEllipsis" Text="{x:Bind ((VM:PlaylistViewModel)DataContext).Playlist.Description, Mode=OneWay, FallbackValue='No Description'}" FontSize="24" FontWeight="Normal" FontFamily="Segoe UI Light"/>
                    </StackPanel>
                    <Grid VerticalAlignment="Bottom" Margin="15,0,15,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,0,0" Grid.Column="0">
                            <TextBlock Text="{x:Bind ((VM:PlaylistViewModel)DataContext).TotalSongs, Mode=OneWay, FallbackValue='0 Songs'}" FontSize="15"></TextBlock>
                            <TextBlock Text="&#x2022;" FontSize="15" Margin="5,0,0,0"/>
                            <TextBlock Text="{x:Bind ((VM:PlaylistViewModel)DataContext).TotalMinutes, Mode=OneWay,FallbackValue='0 Minutes'}" FontSize="15" Margin="5,0,0,0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="2">
                            <Button x:Uid="playlistPlayAllBtn" Style="{StaticResource HyperlinkBtn}" Padding="0,0,0,0" HorizontalAlignment="Center" Command="{Binding Source={StaticResource LibVM}, Path=PlayCommand}" CommandParameter="{Binding Path=Songs[0], Mode=OneWay}" RequestedTheme="Dark" Background="{x:Null}" Height="20">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="15" VerticalAlignment="Center" Text="&#xE102;"></TextBlock>
                                    <TextBlock x:Uid="playlistPlayAllTextBlock" FontFamily="Segoe UI" Text=" Play all" ></TextBlock>
                                </StackPanel>
                            </Button>
                            <Button x:Uid="playlistMore" Style="{StaticResource HyperlinkBtn}" Visibility="{x:Bind ((VM:PlaylistViewModel)DataContext).IsMenuVisible, Converter={StaticResource BoolToVisibility}}" Flyout="{StaticResource ExtraMenuFlyout}" Padding="0,0,0,0" HorizontalAlignment="Center" Margin="10,0,0,0" Content="&#x2022;&#x2022;&#x2022;" RequestedTheme="Dark" Background="{x:Null}"></Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </Border>

        <ListView x:Name="fileBox" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" ScrollViewer.IsScrollInertiaEnabled="True" ShowsScrollingPlaceholders="True" ItemsSource="{Binding Source={StaticResource Source}, UpdateSourceTrigger=Explicit}" ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="1" Grid.RowSpan="3" ItemTemplate="{StaticResource MediafileUnselectedTemplate}">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsStackPanel Orientation="Vertical" CacheLength="0"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="SelectionChanged">
                    <Core:EventTriggerBehavior.Actions>
                        <Core:CallMethodAction MethodName="SelectionChanged" TargetObject="{Binding Source={StaticResource LibVM}}"/>
                     </Core:EventTriggerBehavior.Actions>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </ListView>
        <ProgressRing Grid.Row="1" IsActive="{x:Bind ((VM:PlaylistViewModel)DataContext).IsPlaylistLoading, Mode=OneWay}" Width="40" Height="40"/>
    </Grid>
</Page>
